{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","feedback","onClick","prototypes","PropTypes","array","isRequired","func","Statistics","good","neutral","bad","total","positivePercentage","list","item","number","Notification","message","string","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","feedbackIncrement","event","target","innerText","setState","prevState","this","totalFeedback","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0a60991.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__1bVyJ\",\"list\":\"Statistics_list__27vDB\",\"item\":\"Statistics_item__1Bn9e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2oTdX\",\"title\":\"Section_title__S-IFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackOptions\":\"FeedbackOptions_FeedbackOptions__2yStM\",\"button\":\"FeedbackOptions_button__2AyyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2IeNw\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={s.FeedbackOptions}>\r\n    {options.map(option => (\r\n      <button\r\n        className={s.button}\r\n        type=\"button\"\r\n        key={option}\r\n        feedback={option}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.prototypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className={s.Statistics}>\n    <ul className={s.list}>\n      <li className={s.item}>\n        <span>Good: </span>\n        {good}\n      </li>\n      <li className={s.item}>\n        <span>Neutral: </span>\n        {neutral}\n      </li>\n      <li className={s.item}>\n        <span>Bad: </span>\n        {bad}\n      </li>\n      <li className={s.item}>\n        <span>Total: </span>\n        {total}\n      </li>\n      <li className={s.item}>\n        <span>Positive feedback: </span>\n        {positivePercentage}%\n      </li>\n    </ul>\n  </div>\n);\n\nStatistics.prototypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={s.message}>{message}</p>;\r\n};\r\n\r\nNotification.prototypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Section from './components/Section';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Statistics from './components/Statistics';\r\nimport Notification from './components/Notification';\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    return total ? Math.round((good / total) * 100) : 0;\r\n  };\r\n\r\n  feedbackIncrement = event => {\r\n    if (event.target.innerText === 'good') {\r\n      return this.setState(prevState => ({\r\n        good: prevState.good + 1,\r\n      }));\r\n    }\r\n    if (event.target.innerText === 'neutral') {\r\n      this.setState(prevState => ({\r\n        neutral: prevState.neutral + 1,\r\n      }));\r\n    }\r\n    if (event.target.innerText === 'bad') {\r\n      this.setState(prevState => ({\r\n        bad: prevState.bad + 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const totalFeedback = this.countTotalFeedback();\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.feedbackIncrement}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {totalFeedback === 0 ? (\r\n            <Notification message={'No feedback given'} />\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={totalFeedback}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}